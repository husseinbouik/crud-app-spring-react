services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: crud-app-postgres
    environment:
      POSTGRES_DB: crud_app_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - crud-app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: crud-app-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/crud_app_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - crud-app-network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: crud-app-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - crud-app-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  crud-app-network:
    driver: bridge 